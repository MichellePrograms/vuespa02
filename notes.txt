git checkout -m build-process
git checkout -m single-file-components
git checkout -m routing
git checkout -m api-communication
git checkout -m state-management
git checkout -m server-side-rendering
git checkout -m testing
git checkout -m deploying


editorconfig.org


check on version: use git cmd or git bash
node package manager
npm -v
version in tutorial is 5.3.0
installed verison from internet is 5.6.0

git bash change directory to C:\Users\Mine\source\pluralSite\vuespa02
cd ..
cd "Mine/source/pluralSite/vuespa02"


comment out all the stuff in the 02 package.json as dependencies

delete the package-lock.json

npm init -y

Wrote to C:\Users\Mine\source\pluralSite\vuespa02\package.json:


npm install vue@2.4.2 --SAVE
the --save is important,  save adds vue to dependencies in package.json


$ npm install vue@2.4.2 --save
+ vue@2.4.2
added 37 packages, removed 143 packages and updated 127 packages in 10.01s

$ npm install vue@2.4.2 --save
npm notice created a lockfile as package-lock.json. You should commit this file.
+ vue@2.4.2
added 1 package in 0.825s


make sure you have the show all files/folders chosen to see the node_modules folder etc

 $npm install express@4.15.4 --save
this add of express get a crap ton of stuff in the node_modules

make server.js file

putting in the express package for the express server adds the package.lock.json
add and modify the server.js file

git bash cmd line
node server

go to localhost:3000 all return hey there
http://localhost:3000/
http://localhost:3000/user
http://localhost:3000/home


in package.json
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server.js"

this means from command line you can type 'npm run start'
or 'npm start'  to kick of startup script, which can turn into a big deal


module bundler for the const refs usages in .js files, pollyfil in module bundler plugin for older browsers
webpack is the choice because it does a lot

make build folder and add a webpack.base.config.js
npm install webpack@3.5.5 --save-dev
puts it up in the package.json dev dependencies

work on the app.js, client-entry.js , and the webpack.base.config

commandline
node ./node_modules/webpack/bin/webpack --config ./build/webpack.base.config.js

 node ./node_modules/webpack/bin/webpack --config ./build/webpack.base.config.js
Hash: e9b5af3d7ce46d29fcea
Version: webpack 3.5.5
Time: 94ms
           Asset     Size  Chunks             Chunk Names
assets/js/app.js  3.16 kB       0  [emitted]  app
   [0] ./src/client-entry.js 108 bytes {0} [built]
   [1] ./src/app.js 210 bytes {0} [built]

 webpack creates us our dis > assets > js > app.js file
 all this includes the pollyfill code from our setup thru webpack.base > client-entry > app

 try this out in all the browser things!!!!!

